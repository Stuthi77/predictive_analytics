# -*- coding: utf-8 -*-
"""lvadsusr80_D.stuthi_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18VXawPTBD4koxT_tdWMlfOzdaNXZWm3P
"""

#regression model
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report,accuracy_score
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.linear_model import LinearRegression

df=pd.read_csv('/content/auto-mpg.csv')
df

df.info()

df.isnull().sum()

df=df.fillna(df.mean())

df.isnull().sum()

df=df.dropna()

df.isnull().sum()

df.info()

df.columns

l=LabelEncoder()
df['car name']=l.fit_transform(df['car name'])
df['horsepower']=l.fit_transform(df['horsepower'])
z_score=abs((df-df.mean())/df.std())
print(z_score)
df=df[z_score<3]
df

X=df[['cylinders', 'displacement', 'horsepower', 'weight','acceleration', 'model year', 'origin', 'car name']]
Y=df['mpg']

df1=df[df[['mpg','cylinders', 'displacement', 'horsepower', 'weight','acceleration', 'model year', 'origin', 'car name']]==np.NaN]
df
X=df[['cylinders', 'displacement', 'horsepower', 'weight','acceleration', 'model year', 'origin', 'car name']]
Y=df['mpg']
df

df=df.dropna()

df
df.isna().sum()
X=df[['cylinders', 'displacement', 'horsepower', 'weight','acceleration', 'model year', 'origin', 'car name']]
Y=df['mpg']

x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3)
Model=LinearRegression()
Model.fit(x_train,y_train)
y_pred=Model.predict(x_test)
from sklearn.metrics import accuracy_score,mean_squared_error,r2_score,f1_score
a=mean_squared_error(y_test,y_pred)
b=mean_squared_error(y_test,y_pred,squared=False)
c=r2_score(y_test,y_pred)
print(a,b,c)
plt.scatter(x_test['acceleration'],y_test,label="actual value",color='black')
plt.scatter(x_test['acceleration'],y_pred,label='predicted value',color='blue')
plt.legend()
plt.grid(True)
plt.show()